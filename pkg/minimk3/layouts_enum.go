// Code generated by go-enum
// DO NOT EDIT!

package minimk3

import (
	"fmt"
)

const (
	// LayoutSession is a Layout of type Session
	LayoutSession Layout = iota
	// LayoutDrum is a Layout of type Drum
	LayoutDrum
	// LayoutKeys is a Layout of type Keys
	LayoutKeys
	// LayoutUser is a Layout of type User
	LayoutUser
	// LayoutDawFaders is a Layout of type DawFaders
	LayoutDawFaders
	// LayoutProgrammer is a Layout of type Programmer
	LayoutProgrammer
)

const _LayoutName = "SessionDrumKeysUserDawFadersProgrammer"

var _LayoutMap = map[Layout]string{
	0: _LayoutName[0:7],
	1: _LayoutName[7:11],
	2: _LayoutName[11:15],
	3: _LayoutName[15:19],
	4: _LayoutName[19:28],
	5: _LayoutName[28:38],
}

func (i Layout) String() string {
	if str, ok := _LayoutMap[i]; ok {
		return str
	}
	return fmt.Sprintf("Layout(%d)", i)
}

var _LayoutValue = map[string]Layout{
	_LayoutName[0:7]:   0,
	_LayoutName[7:11]:  1,
	_LayoutName[11:15]: 2,
	_LayoutName[15:19]: 3,
	_LayoutName[19:28]: 4,
	_LayoutName[28:38]: 5,
}

// ParseLayout attempts to convert a string to a Layout
func ParseLayout(name string) (Layout, error) {
	if x, ok := _LayoutValue[name]; ok {
		return Layout(x), nil
	}
	return Layout(0), fmt.Errorf("%s is not a valid Layout", name)
}
