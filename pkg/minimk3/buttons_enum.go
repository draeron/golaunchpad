// Code generated by go-enum
// DO NOT EDIT!

package minimk3

import (
	"fmt"
)

const (
	// BtnUp is a Btn of type Up
	BtnUp Btn = iota
	// BtnDown is a Btn of type Down
	BtnDown
	// BtnLeft is a Btn of type Left
	BtnLeft
	// BtnRight is a Btn of type Right
	BtnRight
	// BtnSession is a Btn of type Session
	BtnSession
	// BtnDrums is a Btn of type Drums
	BtnDrums
	// BtnKeys is a Btn of type Keys
	BtnKeys
	// BtnUser is a Btn of type User
	BtnUser
	// BtnRow1 is a Btn of type Row1
	BtnRow1
	// BtnRow2 is a Btn of type Row2
	BtnRow2
	// BtnRow3 is a Btn of type Row3
	BtnRow3
	// BtnRow4 is a Btn of type Row4
	BtnRow4
	// BtnRow5 is a Btn of type Row5
	BtnRow5
	// BtnRow6 is a Btn of type Row6
	BtnRow6
	// BtnRow7 is a Btn of type Row7
	BtnRow7
	// BtnStopSoloMute is a Btn of type StopSoloMute
	BtnStopSoloMute
	// BtnPad11 is a Btn of type Pad11
	BtnPad11
	// BtnPad12 is a Btn of type Pad12
	BtnPad12
	// BtnPad13 is a Btn of type Pad13
	BtnPad13
	// BtnPad14 is a Btn of type Pad14
	BtnPad14
	// BtnPad15 is a Btn of type Pad15
	BtnPad15
	// BtnPad16 is a Btn of type Pad16
	BtnPad16
	// BtnPad17 is a Btn of type Pad17
	BtnPad17
	// BtnPad18 is a Btn of type Pad18
	BtnPad18
	// BtnPad21 is a Btn of type Pad21
	BtnPad21
	// BtnPad22 is a Btn of type Pad22
	BtnPad22
	// BtnPad23 is a Btn of type Pad23
	BtnPad23
	// BtnPad24 is a Btn of type Pad24
	BtnPad24
	// BtnPad25 is a Btn of type Pad25
	BtnPad25
	// BtnPad26 is a Btn of type Pad26
	BtnPad26
	// BtnPad27 is a Btn of type Pad27
	BtnPad27
	// BtnPad28 is a Btn of type Pad28
	BtnPad28
	// BtnPad31 is a Btn of type Pad31
	BtnPad31
	// BtnPad32 is a Btn of type Pad32
	BtnPad32
	// BtnPad33 is a Btn of type Pad33
	BtnPad33
	// BtnPad34 is a Btn of type Pad34
	BtnPad34
	// BtnPad35 is a Btn of type Pad35
	BtnPad35
	// BtnPad36 is a Btn of type Pad36
	BtnPad36
	// BtnPad37 is a Btn of type Pad37
	BtnPad37
	// BtnPad38 is a Btn of type Pad38
	BtnPad38
	// BtnPad41 is a Btn of type Pad41
	BtnPad41
	// BtnPad42 is a Btn of type Pad42
	BtnPad42
	// BtnPad43 is a Btn of type Pad43
	BtnPad43
	// BtnPad44 is a Btn of type Pad44
	BtnPad44
	// BtnPad45 is a Btn of type Pad45
	BtnPad45
	// BtnPad46 is a Btn of type Pad46
	BtnPad46
	// BtnPad47 is a Btn of type Pad47
	BtnPad47
	// BtnPad48 is a Btn of type Pad48
	BtnPad48
	// BtnPad51 is a Btn of type Pad51
	BtnPad51
	// BtnPad52 is a Btn of type Pad52
	BtnPad52
	// BtnPad53 is a Btn of type Pad53
	BtnPad53
	// BtnPad54 is a Btn of type Pad54
	BtnPad54
	// BtnPad55 is a Btn of type Pad55
	BtnPad55
	// BtnPad56 is a Btn of type Pad56
	BtnPad56
	// BtnPad57 is a Btn of type Pad57
	BtnPad57
	// BtnPad58 is a Btn of type Pad58
	BtnPad58
	// BtnPad61 is a Btn of type Pad61
	BtnPad61
	// BtnPad62 is a Btn of type Pad62
	BtnPad62
	// BtnPad63 is a Btn of type Pad63
	BtnPad63
	// BtnPad64 is a Btn of type Pad64
	BtnPad64
	// BtnPad65 is a Btn of type Pad65
	BtnPad65
	// BtnPad66 is a Btn of type Pad66
	BtnPad66
	// BtnPad67 is a Btn of type Pad67
	BtnPad67
	// BtnPad68 is a Btn of type Pad68
	BtnPad68
	// BtnPad71 is a Btn of type Pad71
	BtnPad71
	// BtnPad72 is a Btn of type Pad72
	BtnPad72
	// BtnPad73 is a Btn of type Pad73
	BtnPad73
	// BtnPad74 is a Btn of type Pad74
	BtnPad74
	// BtnPad75 is a Btn of type Pad75
	BtnPad75
	// BtnPad76 is a Btn of type Pad76
	BtnPad76
	// BtnPad77 is a Btn of type Pad77
	BtnPad77
	// BtnPad78 is a Btn of type Pad78
	BtnPad78
	// BtnPad81 is a Btn of type Pad81
	BtnPad81
	// BtnPad82 is a Btn of type Pad82
	BtnPad82
	// BtnPad83 is a Btn of type Pad83
	BtnPad83
	// BtnPad84 is a Btn of type Pad84
	BtnPad84
	// BtnPad85 is a Btn of type Pad85
	BtnPad85
	// BtnPad86 is a Btn of type Pad86
	BtnPad86
	// BtnPad87 is a Btn of type Pad87
	BtnPad87
	// BtnPad88 is a Btn of type Pad88
	BtnPad88
)

const _BtnName = "UpDownLeftRightSessionDrumsKeysUserRow1Row2Row3Row4Row5Row6Row7StopSoloMutePad11Pad12Pad13Pad14Pad15Pad16Pad17Pad18Pad21Pad22Pad23Pad24Pad25Pad26Pad27Pad28Pad31Pad32Pad33Pad34Pad35Pad36Pad37Pad38Pad41Pad42Pad43Pad44Pad45Pad46Pad47Pad48Pad51Pad52Pad53Pad54Pad55Pad56Pad57Pad58Pad61Pad62Pad63Pad64Pad65Pad66Pad67Pad68Pad71Pad72Pad73Pad74Pad75Pad76Pad77Pad78Pad81Pad82Pad83Pad84Pad85Pad86Pad87Pad88"

var _BtnMap = map[Btn]string{
	0:  _BtnName[0:2],
	1:  _BtnName[2:6],
	2:  _BtnName[6:10],
	3:  _BtnName[10:15],
	4:  _BtnName[15:22],
	5:  _BtnName[22:27],
	6:  _BtnName[27:31],
	7:  _BtnName[31:35],
	8:  _BtnName[35:39],
	9:  _BtnName[39:43],
	10: _BtnName[43:47],
	11: _BtnName[47:51],
	12: _BtnName[51:55],
	13: _BtnName[55:59],
	14: _BtnName[59:63],
	15: _BtnName[63:75],
	16: _BtnName[75:80],
	17: _BtnName[80:85],
	18: _BtnName[85:90],
	19: _BtnName[90:95],
	20: _BtnName[95:100],
	21: _BtnName[100:105],
	22: _BtnName[105:110],
	23: _BtnName[110:115],
	24: _BtnName[115:120],
	25: _BtnName[120:125],
	26: _BtnName[125:130],
	27: _BtnName[130:135],
	28: _BtnName[135:140],
	29: _BtnName[140:145],
	30: _BtnName[145:150],
	31: _BtnName[150:155],
	32: _BtnName[155:160],
	33: _BtnName[160:165],
	34: _BtnName[165:170],
	35: _BtnName[170:175],
	36: _BtnName[175:180],
	37: _BtnName[180:185],
	38: _BtnName[185:190],
	39: _BtnName[190:195],
	40: _BtnName[195:200],
	41: _BtnName[200:205],
	42: _BtnName[205:210],
	43: _BtnName[210:215],
	44: _BtnName[215:220],
	45: _BtnName[220:225],
	46: _BtnName[225:230],
	47: _BtnName[230:235],
	48: _BtnName[235:240],
	49: _BtnName[240:245],
	50: _BtnName[245:250],
	51: _BtnName[250:255],
	52: _BtnName[255:260],
	53: _BtnName[260:265],
	54: _BtnName[265:270],
	55: _BtnName[270:275],
	56: _BtnName[275:280],
	57: _BtnName[280:285],
	58: _BtnName[285:290],
	59: _BtnName[290:295],
	60: _BtnName[295:300],
	61: _BtnName[300:305],
	62: _BtnName[305:310],
	63: _BtnName[310:315],
	64: _BtnName[315:320],
	65: _BtnName[320:325],
	66: _BtnName[325:330],
	67: _BtnName[330:335],
	68: _BtnName[335:340],
	69: _BtnName[340:345],
	70: _BtnName[345:350],
	71: _BtnName[350:355],
	72: _BtnName[355:360],
	73: _BtnName[360:365],
	74: _BtnName[365:370],
	75: _BtnName[370:375],
	76: _BtnName[375:380],
	77: _BtnName[380:385],
	78: _BtnName[385:390],
	79: _BtnName[390:395],
}

func (i Btn) String() string {
	if str, ok := _BtnMap[i]; ok {
		return str
	}
	return fmt.Sprintf("Btn(%d)", i)
}

var _BtnValue = map[string]Btn{
	_BtnName[0:2]:     0,
	_BtnName[2:6]:     1,
	_BtnName[6:10]:    2,
	_BtnName[10:15]:   3,
	_BtnName[15:22]:   4,
	_BtnName[22:27]:   5,
	_BtnName[27:31]:   6,
	_BtnName[31:35]:   7,
	_BtnName[35:39]:   8,
	_BtnName[39:43]:   9,
	_BtnName[43:47]:   10,
	_BtnName[47:51]:   11,
	_BtnName[51:55]:   12,
	_BtnName[55:59]:   13,
	_BtnName[59:63]:   14,
	_BtnName[63:75]:   15,
	_BtnName[75:80]:   16,
	_BtnName[80:85]:   17,
	_BtnName[85:90]:   18,
	_BtnName[90:95]:   19,
	_BtnName[95:100]:  20,
	_BtnName[100:105]: 21,
	_BtnName[105:110]: 22,
	_BtnName[110:115]: 23,
	_BtnName[115:120]: 24,
	_BtnName[120:125]: 25,
	_BtnName[125:130]: 26,
	_BtnName[130:135]: 27,
	_BtnName[135:140]: 28,
	_BtnName[140:145]: 29,
	_BtnName[145:150]: 30,
	_BtnName[150:155]: 31,
	_BtnName[155:160]: 32,
	_BtnName[160:165]: 33,
	_BtnName[165:170]: 34,
	_BtnName[170:175]: 35,
	_BtnName[175:180]: 36,
	_BtnName[180:185]: 37,
	_BtnName[185:190]: 38,
	_BtnName[190:195]: 39,
	_BtnName[195:200]: 40,
	_BtnName[200:205]: 41,
	_BtnName[205:210]: 42,
	_BtnName[210:215]: 43,
	_BtnName[215:220]: 44,
	_BtnName[220:225]: 45,
	_BtnName[225:230]: 46,
	_BtnName[230:235]: 47,
	_BtnName[235:240]: 48,
	_BtnName[240:245]: 49,
	_BtnName[245:250]: 50,
	_BtnName[250:255]: 51,
	_BtnName[255:260]: 52,
	_BtnName[260:265]: 53,
	_BtnName[265:270]: 54,
	_BtnName[270:275]: 55,
	_BtnName[275:280]: 56,
	_BtnName[280:285]: 57,
	_BtnName[285:290]: 58,
	_BtnName[290:295]: 59,
	_BtnName[295:300]: 60,
	_BtnName[300:305]: 61,
	_BtnName[305:310]: 62,
	_BtnName[310:315]: 63,
	_BtnName[315:320]: 64,
	_BtnName[320:325]: 65,
	_BtnName[325:330]: 66,
	_BtnName[330:335]: 67,
	_BtnName[335:340]: 68,
	_BtnName[340:345]: 69,
	_BtnName[345:350]: 70,
	_BtnName[350:355]: 71,
	_BtnName[355:360]: 72,
	_BtnName[360:365]: 73,
	_BtnName[365:370]: 74,
	_BtnName[370:375]: 75,
	_BtnName[375:380]: 76,
	_BtnName[380:385]: 77,
	_BtnName[385:390]: 78,
	_BtnName[390:395]: 79,
}

// ParseBtn attempts to convert a string to a Btn
func ParseBtn(name string) (Btn, error) {
	if x, ok := _BtnValue[name]; ok {
		return Btn(x), nil
	}
	return Btn(0), fmt.Errorf("%s is not a valid Btn", name)
}
